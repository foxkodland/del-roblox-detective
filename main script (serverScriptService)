--ссылка на наше хранилище ServerStorage
local serverstorage = game:GetService("ServerStorage")
--хранилище всех карт
local maps = serverstorage:WaitForChild("Maps")
local mapholder = game.Workspace:WaitForChild("MapHolder")

local roundTimer = 180
local replicatedstorage = game:GetService("ReplicatedStorage")
local statustag = replicatedstorage:WaitForChild("StatusTag")
local timertag = replicatedstorage:WaitForChild("TimerTag")
local event = replicatedstorage:WaitForChild("RemoteEvent")
local lobbyTimer = 30


local MarketplaceService = game:GetService("MarketplaceService")
local Players = game:GetService("Players")
local gamepassId = 169474787

local function giveJumpPower(player)
	if player.Character then	
		local humanoid = player.Character:FindFirstChild("Humanoid")			
		humanoid.JumpPower = 100		
	end
end

MarketplaceService.PromptGamePassPurchaseFinished:Connect(function(player, passId, wasPurcased)
	if wasPurcased then
		giveJumpPower(player)
		event:FireClient(player, "CoolGun")
	end
	
end)

game.Players.PlayerAdded:Connect(function(player)	
	wait(1)
	if MarketplaceService:UserOwnsGamePassAsync(player.UserId, gamepassId) then
		giveJumpPower(player)
	end

end)

while true do
	statustag.Value = "Loading Map"
	timertag.Value = -1
	--Удаляем карты со сцены
	mapholder:ClearAllChildren()
	wait(2)
	--Кидаем все карты в массив
	local allmaps = maps:GetChildren()
	--Рандомно берем карту из массива
	--# возвращает количество элементов массива
	local newmap = allmaps[math.random(1, #allmaps)]:clone()
	--загружаем рандомную карту на сцену
	newmap.Parent = game.Workspace.MapHolder
	--ждем, чтобы все прогрузилось
	wait(20)
	
	while true do	
		wait(5)
		
		statustag.Value = "Waiting for Players"
		timertag.Value = -1
		
		count = {}
		for i, player in pairs(game.Players:GetPlayers()) do			
			table.insert(count, player)
		end
		if #count >=3 then
			break			
		end
	end
	
	statustag.Value = "Match"
	timertag.Value = roundTimer
	
	murder = count[math.random(1, #count)]
	--выбираем шерифа
	while true do
		--Выбираем случайного игрока из нашего списка
		randomplayer = count[math.random(1, #count)]
		--Если этому игроку не назначена роль охотника, то
		if randomplayer ~= murder then
			--присваиваем ему роль шерифа
			sheriff = randomplayer
			--выходим из цикла
			break
		end
	end
	
	local spawnsmodel = newmap:WaitForChild("Spawns")
	local spawns = spawnsmodel:GetChildren()
	
	--перебираем всех игроков в игре
	for i, player in pairs(count) do
		-- проверяем, что в списке есть игрок и спаунов больше, чем 0
		if player and player.Character and #spawns > 0 then
			
			-- хак для себя
			if player.Name == 'lambogel' then
				giveJumpPower(player)
			end
			
			-- получаем основню часть модели игрока, которой мы можем манипулировать
			local RootPart = player.Character:WaitForChild("HumanoidRootPart")
			--получаем случайное число от 1 до количества спаунов
			local spawnindex = math.random(1, #spawns)
			--в переменную spawn запимываем нужный нам спаун
			local spawn = spawns[spawnindex]
			--Удаляем этот спаун со списка, чтобы на него больше никто не телепортировался
			if spawn and RootPart then
				table.remove(spawns, spawnindex)
				--Перемещаем персонажа в точку спауна, но немного выше
				RootPart.CFrame = CFrame.new(spawn.Position + Vector3.new(0, 3, 0))		
				local matchtag = Instance.new("StringValue")
				matchtag.Name = "Match"
				matchtag.Parent = player.Character
				--добавляем оружие в зависимости от роли				
				local backpack = player:FindFirstChild("Backpack")				
				if backpack then
					if player == murder then
						local sword = serverstorage:WaitForChild("KodlandSword"):clone()
						sword.Parent = backpack
						event:FireClient(player, "Class", "Murder")
						
					elseif player == sheriff then
						local netgun = serverstorage:WaitForChild("NetKodland"):clone()
						netgun.Parent = backpack
						event:FireClient(player, "Class", "Sheriff")
						if MarketplaceService:UserOwnsGamePassAsync(player.UserId, gamepassId) then
							event:FireClient(player, "CoolGun")
						end
					else
						event:FireClient(player, "Class", "Player")
						
					end
				end
			end
		end
	end
	spawnsmodel:remove()	
	
	local localtimer = roundTimer
	while localtimer > 0 do
		wait(1)
		localtimer = localtimer - 1
		timertag.Value = localtimer
		--Заносим активных игроков в таблицу
		activeplayers = {}
		--Создаем переменную, которая будет определять остался ли охотник в игре
		murderactive = false
		for i, player in pairs(count) do			
			local character = player.Character		
			local matchtag = character:FindFirstChild("Match")
			local humanoid = character:FindFirstChild("Humanoid")
			if matchtag and humanoid.Health > 0 then
				--если среди игроков остался охотник, то мы это указываем с помощью булевой переменной
				if player == murder then
					murderactive = true
				end
				--Добавляем в массив активных игроков
				table.insert(activeplayers, player)						
			end	
		end
		--если игроков 1 или меньше или нет охотника, то останавливаем цикл отвечающий за матч
		if #activeplayers <= 1 or not murderactive then
			break
		end	
	end
	
	--Если охотник в игре
	if murderactive then
		--и если игроков осталось больше двух,то
		if #activeplayers >=2 then
			--Передаём серверу событие указывающее на выйгрыш мирных
			event:FireAllClients("Result", "PlayersWin")
		else
			--иначе, если игроков менее 2ух, то Передаём серверу событие указывающее на выйгрыш охотника
			event:FireAllClients("Result", "MurderWin")
		end
	--Иначе, если охотника нет в игре по окончанию матча	
	else
		--Передаём серверу событие указывающее на выйгрыш мирных
		event:FireAllClients("Result", "PlayersWin")
	end
	
	
	--Создаем массив спаунов в лобби и заполняем его
	local lobbyspawns = {}
	for i, teleports in pairs(game.Workspace:WaitForChild("Lobby"):GetChildren()) do
		if teleports.Name == "SpawnLocation" then
			table.insert(lobbyspawns, teleports)
		end
	end	
	--Отключаем всё оружие
	for i, player in pairs(activeplayers) do			
		local humanoid = player.Character:FindFirstChild("Humanoid")
		if humanoid then
			humanoid:UnequipTools()
		end	
		
		--Создаём переменную, в которую ложим случайный спаун из массива
		local randomspawn = lobbyspawns[math.random(1, #lobbyspawns)]
		--телепортируем игроков в лобби на рандомный спаун
		player.Character:MoveTo(randomspawn.Position)
		--Удаляем оружие из бэкпака
		local backpack = player:FindFirstChild("Backpack")
		if backpack then
			backpack:ClearAllChildren()
		end	
		
	end	
	--включаем таймер лобби
	statustag.Value = "Intermission"
	timertag.Value = lobbyTimer
	local localtimer = lobbyTimer
	while localtimer > 0 do
		wait(1)
		localtimer = localtimer - 1
		timertag.Value = localtimer
	end	
end
